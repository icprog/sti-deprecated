// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.

#include "device.h"
#include <omniORB4/IOP_S.h>
#include <omniORB4/IOP_C.h>
#include <omniORB4/callDescriptor.h>
#include <omniORB4/callHandle.h>
#include <omniORB4/objTracker.h>


OMNI_USING_NAMESPACE(omni)

static const char* _0RL_library_version = omniORB_4_1;



STI::Server_Device::DataLogger_ptr STI::Server_Device::DataLogger_Helper::_nil() {
  return ::STI::Server_Device::DataLogger::_nil();
}

::CORBA::Boolean STI::Server_Device::DataLogger_Helper::is_nil(::STI::Server_Device::DataLogger_ptr p) {
  return ::CORBA::is_nil(p);

}

void STI::Server_Device::DataLogger_Helper::release(::STI::Server_Device::DataLogger_ptr p) {
  ::CORBA::release(p);
}

void STI::Server_Device::DataLogger_Helper::marshalObjRef(::STI::Server_Device::DataLogger_ptr obj, cdrStream& s) {
  ::STI::Server_Device::DataLogger::_marshalObjRef(obj, s);
}

STI::Server_Device::DataLogger_ptr STI::Server_Device::DataLogger_Helper::unmarshalObjRef(cdrStream& s) {
  return ::STI::Server_Device::DataLogger::_unmarshalObjRef(s);
}

void STI::Server_Device::DataLogger_Helper::duplicate(::STI::Server_Device::DataLogger_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

STI::Server_Device::DataLogger_ptr
STI::Server_Device::DataLogger::_duplicate(::STI::Server_Device::DataLogger_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

STI::Server_Device::DataLogger_ptr
STI::Server_Device::DataLogger::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


STI::Server_Device::DataLogger_ptr
STI::Server_Device::DataLogger::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

STI::Server_Device::DataLogger_ptr
STI::Server_Device::DataLogger::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_DataLogger _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_DataLogger* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_DataLogger;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* STI::Server_Device::DataLogger::_PD_repoId = "IDL:STI/Server_Device/DataLogger:1.0";


STI::Server_Device::_objref_DataLogger::~_objref_DataLogger() {
  
}


STI::Server_Device::_objref_DataLogger::_objref_DataLogger(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::STI::Server_Device::DataLogger::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
STI::Server_Device::_objref_DataLogger::_ptrToObjRef(const char* id)
{
  if( id == ::STI::Server_Device::DataLogger::_PD_repoId )
    return (::STI::Server_Device::DataLogger_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::STI::Server_Device::DataLogger::_PD_repoId) )
    return (::STI::Server_Device::DataLogger_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cSTI_mTypes_mTLogFileSeq
class _0RL_cd_b03af55d077a10b8_00000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_00000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  STI::Types::TLogFileSeq_var result;
};

void _0RL_cd_b03af55d077a10b8_00000000::marshalReturnedValues(cdrStream& _n)
{
  (const STI::Types::TLogFileSeq&) result >>= _n;

}

void _0RL_cd_b03af55d077a10b8_00000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new STI::Types::TLogFileSeq;
  (STI::Types::TLogFileSeq&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_10000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_00000000* tcd = (_0RL_cd_b03af55d077a10b8_00000000*)cd;
  STI::Server_Device::_impl_DataLogger* impl = (STI::Server_Device::_impl_DataLogger*) svnt->_ptrToInterface(STI::Server_Device::DataLogger::_PD_repoId);
  tcd->result = impl->getLogFiles();


}

STI::Types::TLogFileSeq* STI::Server_Device::_objref_DataLogger::getLogFiles()
{
  _0RL_cd_b03af55d077a10b8_00000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_10000000, "getLogFiles", 12);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  void
class _0RL_cd_b03af55d077a10b8_20000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_20000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
    
  
  
};

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_30000000(omniCallDescriptor*, omniServant* svnt)
{
  
  STI::Server_Device::_impl_DataLogger* impl = (STI::Server_Device::_impl_DataLogger*) svnt->_ptrToInterface(STI::Server_Device::DataLogger::_PD_repoId);
  impl->clearLocalLogFiles();


}

void STI::Server_Device::_objref_DataLogger::clearLocalLogFiles()
{
  _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_30000000, "clearLocalLogFiles", 19);


  _invoke(_call_desc);



}
STI::Server_Device::_pof_DataLogger::~_pof_DataLogger() {}


omniObjRef*
STI::Server_Device::_pof_DataLogger::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::STI::Server_Device::_objref_DataLogger(ior, id);
}


::CORBA::Boolean
STI::Server_Device::_pof_DataLogger::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::STI::Server_Device::DataLogger::_PD_repoId) )
    return 1;
  
  return 0;
}

const STI::Server_Device::_pof_DataLogger _the_pof_STI_mServer__Device_mDataLogger;

STI::Server_Device::_impl_DataLogger::~_impl_DataLogger() {}


::CORBA::Boolean
STI::Server_Device::_impl_DataLogger::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "getLogFiles") ) {

    _0RL_cd_b03af55d077a10b8_00000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_10000000, "getLogFiles", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "clearLocalLogFiles") ) {

    _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_30000000, "clearLocalLogFiles", 19, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
STI::Server_Device::_impl_DataLogger::_ptrToInterface(const char* id)
{
  if( id == ::STI::Server_Device::DataLogger::_PD_repoId )
    return (::STI::Server_Device::_impl_DataLogger*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::STI::Server_Device::DataLogger::_PD_repoId) )
    return (::STI::Server_Device::_impl_DataLogger*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
STI::Server_Device::_impl_DataLogger::_mostDerivedRepoId()
{
  return ::STI::Server_Device::DataLogger::_PD_repoId;
}

STI::Server_Device::Configure_ptr STI::Server_Device::Configure_Helper::_nil() {
  return ::STI::Server_Device::Configure::_nil();
}

::CORBA::Boolean STI::Server_Device::Configure_Helper::is_nil(::STI::Server_Device::Configure_ptr p) {
  return ::CORBA::is_nil(p);

}

void STI::Server_Device::Configure_Helper::release(::STI::Server_Device::Configure_ptr p) {
  ::CORBA::release(p);
}

void STI::Server_Device::Configure_Helper::marshalObjRef(::STI::Server_Device::Configure_ptr obj, cdrStream& s) {
  ::STI::Server_Device::Configure::_marshalObjRef(obj, s);
}

STI::Server_Device::Configure_ptr STI::Server_Device::Configure_Helper::unmarshalObjRef(cdrStream& s) {
  return ::STI::Server_Device::Configure::_unmarshalObjRef(s);
}

void STI::Server_Device::Configure_Helper::duplicate(::STI::Server_Device::Configure_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

STI::Server_Device::Configure_ptr
STI::Server_Device::Configure::_duplicate(::STI::Server_Device::Configure_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

STI::Server_Device::Configure_ptr
STI::Server_Device::Configure::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


STI::Server_Device::Configure_ptr
STI::Server_Device::Configure::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

STI::Server_Device::Configure_ptr
STI::Server_Device::Configure::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_Configure _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_Configure* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_Configure;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* STI::Server_Device::Configure::_PD_repoId = "IDL:STI/Server_Device/Configure:1.0";


STI::Server_Device::_objref_Configure::~_objref_Configure() {
  
}


STI::Server_Device::_objref_Configure::_objref_Configure(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::STI::Server_Device::Configure::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
STI::Server_Device::_objref_Configure::_ptrToObjRef(const char* id)
{
  if( id == ::STI::Server_Device::Configure::_PD_repoId )
    return (::STI::Server_Device::Configure_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::STI::Server_Device::Configure::_PD_repoId) )
    return (::STI::Server_Device::Configure_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cstring_i_cstring
class _0RL_cd_b03af55d077a10b8_40000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_40000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::String_var arg_1_;
  const char* arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_b03af55d077a10b8_40000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  _n.marshalString(arg_1,0);

}

void _0RL_cd_b03af55d077a10b8_40000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = _n.unmarshalString(0);
  arg_1 = arg_1_.in();

}

void _0RL_cd_b03af55d077a10b8_40000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_b03af55d077a10b8_40000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_50000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_40000000* tcd = (_0RL_cd_b03af55d077a10b8_40000000*)cd;
  STI::Server_Device::_impl_Configure* impl = (STI::Server_Device::_impl_Configure*) svnt->_ptrToInterface(STI::Server_Device::Configure::_PD_repoId);
  tcd->result = impl->setAttribute(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean STI::Server_Device::_objref_Configure::setAttribute(const char* key, const char* value)
{
  _0RL_cd_b03af55d077a10b8_40000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_50000000, "setAttribute", 13);
  _call_desc.arg_0 = key;
  _call_desc.arg_1 = value;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cstring_i_cstring
class _0RL_cd_b03af55d077a10b8_60000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_60000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::String_var result;
};

void _0RL_cd_b03af55d077a10b8_60000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_b03af55d077a10b8_60000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_b03af55d077a10b8_60000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);

}

void _0RL_cd_b03af55d077a10b8_60000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_70000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_60000000* tcd = (_0RL_cd_b03af55d077a10b8_60000000*)cd;
  STI::Server_Device::_impl_Configure* impl = (STI::Server_Device::_impl_Configure*) svnt->_ptrToInterface(STI::Server_Device::Configure::_PD_repoId);
  tcd->result = impl->getAttribute(tcd->arg_0);


}

char* STI::Server_Device::_objref_Configure::getAttribute(const char* key)
{
  _0RL_cd_b03af55d077a10b8_60000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_70000000, "getAttribute", 13);
  _call_desc.arg_0 = key;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_80000000(omniCallDescriptor*, omniServant* svnt)
{
  
  STI::Server_Device::_impl_Configure* impl = (STI::Server_Device::_impl_Configure*) svnt->_ptrToInterface(STI::Server_Device::Configure::_PD_repoId);
  impl->reRegisterWithServer();


}

void STI::Server_Device::_objref_Configure::reRegisterWithServer()
{
  _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_80000000, "reRegisterWithServer", 21);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_90000000(omniCallDescriptor*, omniServant* svnt)
{
  
  STI::Server_Device::_impl_Configure* impl = (STI::Server_Device::_impl_Configure*) svnt->_ptrToInterface(STI::Server_Device::Configure::_PD_repoId);
  impl->kill();


}

void STI::Server_Device::_objref_Configure::kill()
{
  _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_90000000, "kill", 5);


  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _cSTI_mTypes_mTAttributeSeq
class _0RL_cd_b03af55d077a10b8_a0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_a0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  STI::Types::TAttributeSeq_var result;
};

void _0RL_cd_b03af55d077a10b8_a0000000::marshalReturnedValues(cdrStream& _n)
{
  (const STI::Types::TAttributeSeq&) result >>= _n;

}

void _0RL_cd_b03af55d077a10b8_a0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new STI::Types::TAttributeSeq;
  (STI::Types::TAttributeSeq&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_b0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_a0000000* tcd = (_0RL_cd_b03af55d077a10b8_a0000000*)cd;
  STI::Server_Device::_impl_Configure* impl = (STI::Server_Device::_impl_Configure*) svnt->_ptrToInterface(STI::Server_Device::Configure::_PD_repoId);
  tcd->result = impl->attributes();


}

STI::Types::TAttributeSeq* STI::Server_Device::_objref_Configure::attributes()
{
  _0RL_cd_b03af55d077a10b8_a0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_b0000000, "_get_attributes", 16);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cstring
class _0RL_cd_b03af55d077a10b8_c0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_c0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::String_var result;
};

void _0RL_cd_b03af55d077a10b8_c0000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);

}

void _0RL_cd_b03af55d077a10b8_c0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_d0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_c0000000* tcd = (_0RL_cd_b03af55d077a10b8_c0000000*)cd;
  STI::Server_Device::_impl_Configure* impl = (STI::Server_Device::_impl_Configure*) svnt->_ptrToInterface(STI::Server_Device::Configure::_PD_repoId);
  tcd->result = impl->deviceName();


}

char* STI::Server_Device::_objref_Configure::deviceName()
{
  _0RL_cd_b03af55d077a10b8_c0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_d0000000, "_get_deviceName", 16);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
STI::Server_Device::_pof_Configure::~_pof_Configure() {}


omniObjRef*
STI::Server_Device::_pof_Configure::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::STI::Server_Device::_objref_Configure(ior, id);
}


::CORBA::Boolean
STI::Server_Device::_pof_Configure::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::STI::Server_Device::Configure::_PD_repoId) )
    return 1;
  
  return 0;
}

const STI::Server_Device::_pof_Configure _the_pof_STI_mServer__Device_mConfigure;

STI::Server_Device::_impl_Configure::~_impl_Configure() {}


::CORBA::Boolean
STI::Server_Device::_impl_Configure::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "setAttribute") ) {

    _0RL_cd_b03af55d077a10b8_40000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_50000000, "setAttribute", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getAttribute") ) {

    _0RL_cd_b03af55d077a10b8_60000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_70000000, "getAttribute", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "reRegisterWithServer") ) {

    _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_80000000, "reRegisterWithServer", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "kill") ) {

    _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_90000000, "kill", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_attributes") ) {

    _0RL_cd_b03af55d077a10b8_a0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_b0000000, "_get_attributes", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_deviceName") ) {

    _0RL_cd_b03af55d077a10b8_c0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_d0000000, "_get_deviceName", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
STI::Server_Device::_impl_Configure::_ptrToInterface(const char* id)
{
  if( id == ::STI::Server_Device::Configure::_PD_repoId )
    return (::STI::Server_Device::_impl_Configure*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::STI::Server_Device::Configure::_PD_repoId) )
    return (::STI::Server_Device::_impl_Configure*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
STI::Server_Device::_impl_Configure::_mostDerivedRepoId()
{
  return ::STI::Server_Device::Configure::_PD_repoId;
}

STI::Server_Device::DataTransfer_ptr STI::Server_Device::DataTransfer_Helper::_nil() {
  return ::STI::Server_Device::DataTransfer::_nil();
}

::CORBA::Boolean STI::Server_Device::DataTransfer_Helper::is_nil(::STI::Server_Device::DataTransfer_ptr p) {
  return ::CORBA::is_nil(p);

}

void STI::Server_Device::DataTransfer_Helper::release(::STI::Server_Device::DataTransfer_ptr p) {
  ::CORBA::release(p);
}

void STI::Server_Device::DataTransfer_Helper::marshalObjRef(::STI::Server_Device::DataTransfer_ptr obj, cdrStream& s) {
  ::STI::Server_Device::DataTransfer::_marshalObjRef(obj, s);
}

STI::Server_Device::DataTransfer_ptr STI::Server_Device::DataTransfer_Helper::unmarshalObjRef(cdrStream& s) {
  return ::STI::Server_Device::DataTransfer::_unmarshalObjRef(s);
}

void STI::Server_Device::DataTransfer_Helper::duplicate(::STI::Server_Device::DataTransfer_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

STI::Server_Device::DataTransfer_ptr
STI::Server_Device::DataTransfer::_duplicate(::STI::Server_Device::DataTransfer_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

STI::Server_Device::DataTransfer_ptr
STI::Server_Device::DataTransfer::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


STI::Server_Device::DataTransfer_ptr
STI::Server_Device::DataTransfer::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

STI::Server_Device::DataTransfer_ptr
STI::Server_Device::DataTransfer::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_DataTransfer _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_DataTransfer* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_DataTransfer;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* STI::Server_Device::DataTransfer::_PD_repoId = "IDL:STI/Server_Device/DataTransfer:1.0";


STI::Server_Device::_objref_DataTransfer::~_objref_DataTransfer() {
  
}


STI::Server_Device::_objref_DataTransfer::_objref_DataTransfer(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::STI::Server_Device::DataTransfer::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
STI::Server_Device::_objref_DataTransfer::_ptrToObjRef(const char* id)
{
  if( id == ::STI::Server_Device::DataTransfer::_PD_repoId )
    return (::STI::Server_Device::DataTransfer_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::STI::Server_Device::DataTransfer::_PD_repoId) )
    return (::STI::Server_Device::DataTransfer_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cSTI_mTypes_mTMeasurementSeq_i_clong
class _0RL_cd_b03af55d077a10b8_e0000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_e0000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Long arg_0;
  STI::Types::TMeasurementSeq_var result;
};

void _0RL_cd_b03af55d077a10b8_e0000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;

}

void _0RL_cd_b03af55d077a10b8_e0000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::Long&)arg_0 <<= _n;

}

void _0RL_cd_b03af55d077a10b8_e0000000::marshalReturnedValues(cdrStream& _n)
{
  (const STI::Types::TMeasurementSeq&) result >>= _n;

}

void _0RL_cd_b03af55d077a10b8_e0000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new STI::Types::TMeasurementSeq;
  (STI::Types::TMeasurementSeq&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_f0000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_e0000000* tcd = (_0RL_cd_b03af55d077a10b8_e0000000*)cd;
  STI::Server_Device::_impl_DataTransfer* impl = (STI::Server_Device::_impl_DataTransfer*) svnt->_ptrToInterface(STI::Server_Device::DataTransfer::_PD_repoId);
  tcd->result = impl->getRecentMeasurements(tcd->arg_0);


}

STI::Types::TMeasurementSeq* STI::Server_Device::_objref_DataTransfer::getRecentMeasurements(::CORBA::Long startingIndex)
{
  _0RL_cd_b03af55d077a10b8_e0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_f0000000, "getRecentMeasurements", 22);
  _call_desc.arg_0 = startingIndex;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cSTI_mTypes_mTMeasurementSeq_i_cunsigned_pshort_i_cdouble_i_cdouble_i_cdouble
class _0RL_cd_b03af55d077a10b8_01000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_01000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::UShort arg_0;
  ::CORBA::Double arg_1;
  ::CORBA::Double arg_2;
  ::CORBA::Double arg_3;
  STI::Types::TMeasurementSeq_var result;
};

void _0RL_cd_b03af55d077a10b8_01000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  arg_1 >>= _n;
  arg_2 >>= _n;
  arg_3 >>= _n;

}

void _0RL_cd_b03af55d077a10b8_01000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::UShort&)arg_0 <<= _n;
  (::CORBA::Double&)arg_1 <<= _n;
  (::CORBA::Double&)arg_2 <<= _n;
  (::CORBA::Double&)arg_3 <<= _n;

}

void _0RL_cd_b03af55d077a10b8_01000000::marshalReturnedValues(cdrStream& _n)
{
  (const STI::Types::TMeasurementSeq&) result >>= _n;

}

void _0RL_cd_b03af55d077a10b8_01000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new STI::Types::TMeasurementSeq;
  (STI::Types::TMeasurementSeq&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_11000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_01000000* tcd = (_0RL_cd_b03af55d077a10b8_01000000*)cd;
  STI::Server_Device::_impl_DataTransfer* impl = (STI::Server_Device::_impl_DataTransfer*) svnt->_ptrToInterface(STI::Server_Device::DataTransfer::_PD_repoId);
  tcd->result = impl->getStreamingData(tcd->arg_0, tcd->arg_1, tcd->arg_2, tcd->arg_3);


}

STI::Types::TMeasurementSeq* STI::Server_Device::_objref_DataTransfer::getStreamingData(::CORBA::UShort channel, ::CORBA::Double initial_t, ::CORBA::Double final_t, ::CORBA::Double delta_t)
{
  _0RL_cd_b03af55d077a10b8_01000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_11000000, "getStreamingData", 17);
  _call_desc.arg_0 = channel;
  _call_desc.arg_1 = initial_t;
  _call_desc.arg_2 = final_t;
  _call_desc.arg_3 = delta_t;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cSTI_mTypes_mTLabeledData_i_cstring
class _0RL_cd_b03af55d077a10b8_21000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_21000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::String_var arg_0_;
  const char* arg_0;
  STI::Types::TLabeledData_var result;
};

void _0RL_cd_b03af55d077a10b8_21000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_b03af55d077a10b8_21000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_b03af55d077a10b8_21000000::marshalReturnedValues(cdrStream& _n)
{
  (const STI::Types::TLabeledData&) result >>= _n;

}

void _0RL_cd_b03af55d077a10b8_21000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new STI::Types::TLabeledData;
  (STI::Types::TLabeledData&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_31000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_21000000* tcd = (_0RL_cd_b03af55d077a10b8_21000000*)cd;
  STI::Server_Device::_impl_DataTransfer* impl = (STI::Server_Device::_impl_DataTransfer*) svnt->_ptrToInterface(STI::Server_Device::DataTransfer::_PD_repoId);
  tcd->result = impl->getData(tcd->arg_0);


}

STI::Types::TLabeledData* STI::Server_Device::_objref_DataTransfer::getData(const char* dataLabel)
{
  _0RL_cd_b03af55d077a10b8_21000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_31000000, "getData", 8);
  _call_desc.arg_0 = dataLabel;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_41000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_c0000000* tcd = (_0RL_cd_b03af55d077a10b8_c0000000*)cd;
  STI::Server_Device::_impl_DataTransfer* impl = (STI::Server_Device::_impl_DataTransfer*) svnt->_ptrToInterface(STI::Server_Device::DataTransfer::_PD_repoId);
  tcd->result = impl->errMsg();


}

char* STI::Server_Device::_objref_DataTransfer::errMsg()
{
  _0RL_cd_b03af55d077a10b8_c0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_41000000, "_get_errMsg", 12);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cSTI_mTypes_mTMeasurementSeq
class _0RL_cd_b03af55d077a10b8_51000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_51000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  STI::Types::TMeasurementSeq_var result;
};

void _0RL_cd_b03af55d077a10b8_51000000::marshalReturnedValues(cdrStream& _n)
{
  (const STI::Types::TMeasurementSeq&) result >>= _n;

}

void _0RL_cd_b03af55d077a10b8_51000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new STI::Types::TMeasurementSeq;
  (STI::Types::TMeasurementSeq&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_61000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_51000000* tcd = (_0RL_cd_b03af55d077a10b8_51000000*)cd;
  STI::Server_Device::_impl_DataTransfer* impl = (STI::Server_Device::_impl_DataTransfer*) svnt->_ptrToInterface(STI::Server_Device::DataTransfer::_PD_repoId);
  tcd->result = impl->measurements();


}

STI::Types::TMeasurementSeq* STI::Server_Device::_objref_DataTransfer::measurements()
{
  _0RL_cd_b03af55d077a10b8_51000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_61000000, "_get_measurements", 18);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
STI::Server_Device::_pof_DataTransfer::~_pof_DataTransfer() {}


omniObjRef*
STI::Server_Device::_pof_DataTransfer::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::STI::Server_Device::_objref_DataTransfer(ior, id);
}


::CORBA::Boolean
STI::Server_Device::_pof_DataTransfer::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::STI::Server_Device::DataTransfer::_PD_repoId) )
    return 1;
  
  return 0;
}

const STI::Server_Device::_pof_DataTransfer _the_pof_STI_mServer__Device_mDataTransfer;

STI::Server_Device::_impl_DataTransfer::~_impl_DataTransfer() {}


::CORBA::Boolean
STI::Server_Device::_impl_DataTransfer::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "getRecentMeasurements") ) {

    _0RL_cd_b03af55d077a10b8_e0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_f0000000, "getRecentMeasurements", 22, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getStreamingData") ) {

    _0RL_cd_b03af55d077a10b8_01000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_11000000, "getStreamingData", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getData") ) {

    _0RL_cd_b03af55d077a10b8_21000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_31000000, "getData", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_errMsg") ) {

    _0RL_cd_b03af55d077a10b8_c0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_41000000, "_get_errMsg", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_measurements") ) {

    _0RL_cd_b03af55d077a10b8_51000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_61000000, "_get_measurements", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
STI::Server_Device::_impl_DataTransfer::_ptrToInterface(const char* id)
{
  if( id == ::STI::Server_Device::DataTransfer::_PD_repoId )
    return (::STI::Server_Device::_impl_DataTransfer*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::STI::Server_Device::DataTransfer::_PD_repoId) )
    return (::STI::Server_Device::_impl_DataTransfer*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
STI::Server_Device::_impl_DataTransfer::_mostDerivedRepoId()
{
  return ::STI::Server_Device::DataTransfer::_PD_repoId;
}

STI::Server_Device::DeviceControl_ptr STI::Server_Device::DeviceControl_Helper::_nil() {
  return ::STI::Server_Device::DeviceControl::_nil();
}

::CORBA::Boolean STI::Server_Device::DeviceControl_Helper::is_nil(::STI::Server_Device::DeviceControl_ptr p) {
  return ::CORBA::is_nil(p);

}

void STI::Server_Device::DeviceControl_Helper::release(::STI::Server_Device::DeviceControl_ptr p) {
  ::CORBA::release(p);
}

void STI::Server_Device::DeviceControl_Helper::marshalObjRef(::STI::Server_Device::DeviceControl_ptr obj, cdrStream& s) {
  ::STI::Server_Device::DeviceControl::_marshalObjRef(obj, s);
}

STI::Server_Device::DeviceControl_ptr STI::Server_Device::DeviceControl_Helper::unmarshalObjRef(cdrStream& s) {
  return ::STI::Server_Device::DeviceControl::_unmarshalObjRef(s);
}

void STI::Server_Device::DeviceControl_Helper::duplicate(::STI::Server_Device::DeviceControl_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

STI::Server_Device::DeviceControl_ptr
STI::Server_Device::DeviceControl::_duplicate(::STI::Server_Device::DeviceControl_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

STI::Server_Device::DeviceControl_ptr
STI::Server_Device::DeviceControl::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


STI::Server_Device::DeviceControl_ptr
STI::Server_Device::DeviceControl::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

STI::Server_Device::DeviceControl_ptr
STI::Server_Device::DeviceControl::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_DeviceControl _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_DeviceControl* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_DeviceControl;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* STI::Server_Device::DeviceControl::_PD_repoId = "IDL:STI/Server_Device/DeviceControl:1.0";


STI::Server_Device::_objref_DeviceControl::~_objref_DeviceControl() {
  
}


STI::Server_Device::_objref_DeviceControl::_objref_DeviceControl(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::STI::Server_Device::DeviceControl::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
STI::Server_Device::_objref_DeviceControl::_ptrToObjRef(const char* id)
{
  if( id == ::STI::Server_Device::DeviceControl::_PD_repoId )
    return (::STI::Server_Device::DeviceControl_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::STI::Server_Device::DeviceControl::_PD_repoId) )
    return (::STI::Server_Device::DeviceControl_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cSTI_mTypes_mTStatus
class _0RL_cd_b03af55d077a10b8_71000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_71000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  STI::Types::TStatus result;
};

void _0RL_cd_b03af55d077a10b8_71000000::marshalReturnedValues(cdrStream& _n)
{
  (const STI::Types::TStatus&) result >>= _n;

}

void _0RL_cd_b03af55d077a10b8_71000000::unmarshalReturnedValues(cdrStream& _n)
{
  (STI::Types::TStatus&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_81000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_71000000* tcd = (_0RL_cd_b03af55d077a10b8_71000000*)cd;
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  tcd->result = impl->status();


}

STI::Types::TStatus STI::Server_Device::_objref_DeviceControl::status()
{
  _0RL_cd_b03af55d077a10b8_71000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_81000000, "status", 7);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cSTI_mTypes_mTDeviceEventSeq_i_cboolean
class _0RL_cd_b03af55d077a10b8_91000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_91000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  STI::Types::TDeviceEventSeq_var arg_0_;
  const STI::Types::TDeviceEventSeq* arg_0;
  ::CORBA::Boolean arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_b03af55d077a10b8_91000000::marshalArguments(cdrStream& _n)
{
  (const STI::Types::TDeviceEventSeq&) *arg_0 >>= _n;
  _n.marshalBoolean(arg_1);

}

void _0RL_cd_b03af55d077a10b8_91000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new STI::Types::TDeviceEventSeq;
  (STI::Types::TDeviceEventSeq&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();
  arg_1 = _n.unmarshalBoolean();

}

void _0RL_cd_b03af55d077a10b8_91000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_b03af55d077a10b8_91000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_a1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_91000000* tcd = (_0RL_cd_b03af55d077a10b8_91000000*)cd;
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  tcd->result = impl->transferEvents(*tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean STI::Server_Device::_objref_DeviceControl::transferEvents(const Types::TDeviceEventSeq& events, ::CORBA::Boolean dryrun)
{
  _0RL_cd_b03af55d077a10b8_91000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_a1000000, "transferEvents", 15);
  _call_desc.arg_0 = &(Types::TDeviceEventSeq&) events;
  _call_desc.arg_1 = dryrun;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_b1000000(omniCallDescriptor*, omniServant* svnt)
{
  
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  impl->reset();


}

void STI::Server_Device::_objref_DeviceControl::reset()
{
  _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_b1000000, "reset", 6);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_c1000000(omniCallDescriptor*, omniServant* svnt)
{
  
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  impl->load();


}

void STI::Server_Device::_objref_DeviceControl::load()
{
  _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_c1000000, "load", 5);


  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  _cboolean
class _0RL_cd_b03af55d077a10b8_d1000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_d1000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::Boolean result;
};

void _0RL_cd_b03af55d077a10b8_d1000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_b03af55d077a10b8_d1000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_e1000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_d1000000* tcd = (_0RL_cd_b03af55d077a10b8_d1000000*)cd;
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  tcd->result = impl->prepareToPlay();


}

::CORBA::Boolean STI::Server_Device::_objref_DeviceControl::prepareToPlay()
{
  _0RL_cd_b03af55d077a10b8_d1000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_e1000000, "prepareToPlay", 14);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_f1000000(omniCallDescriptor*, omniServant* svnt)
{
  
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  impl->play();


}

void STI::Server_Device::_objref_DeviceControl::play()
{
  _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_f1000000, "play", 5);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_02000000(omniCallDescriptor*, omniServant* svnt)
{
  
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  impl->pause();


}

void STI::Server_Device::_objref_DeviceControl::pause()
{
  _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_02000000, "pause", 6);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_12000000(omniCallDescriptor*, omniServant* svnt)
{
  
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  impl->stop();


}

void STI::Server_Device::_objref_DeviceControl::stop()
{
  _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_12000000, "stop", 5);


  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_22000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_d1000000* tcd = (_0RL_cd_b03af55d077a10b8_d1000000*)cd;
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  tcd->result = impl->ping();


}

::CORBA::Boolean STI::Server_Device::_objref_DeviceControl::ping()
{
  _0RL_cd_b03af55d077a10b8_d1000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_22000000, "ping", 5);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_32000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_c0000000* tcd = (_0RL_cd_b03af55d077a10b8_c0000000*)cd;
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  tcd->result = impl->controlMsg();


}

char* STI::Server_Device::_objref_DeviceControl::controlMsg()
{
  _0RL_cd_b03af55d077a10b8_c0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_32000000, "_get_controlMsg", 16);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_42000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_c0000000* tcd = (_0RL_cd_b03af55d077a10b8_c0000000*)cd;
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  tcd->result = impl->transferErr();


}

char* STI::Server_Device::_objref_DeviceControl::transferErr()
{
  _0RL_cd_b03af55d077a10b8_c0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_42000000, "_get_transferErr", 17);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_52000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_d1000000* tcd = (_0RL_cd_b03af55d077a10b8_d1000000*)cd;
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  tcd->result = impl->eventsParsed();


}

::CORBA::Boolean STI::Server_Device::_objref_DeviceControl::eventsParsed()
{
  _0RL_cd_b03af55d077a10b8_d1000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_52000000, "_get_eventsParsed", 18);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_62000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_d1000000* tcd = (_0RL_cd_b03af55d077a10b8_d1000000*)cd;
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  tcd->result = impl->eventsLoaded();


}

::CORBA::Boolean STI::Server_Device::_objref_DeviceControl::eventsLoaded()
{
  _0RL_cd_b03af55d077a10b8_d1000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_62000000, "_get_eventsLoaded", 18);


  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_72000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_d1000000* tcd = (_0RL_cd_b03af55d077a10b8_d1000000*)cd;
  STI::Server_Device::_impl_DeviceControl* impl = (STI::Server_Device::_impl_DeviceControl*) svnt->_ptrToInterface(STI::Server_Device::DeviceControl::_PD_repoId);
  tcd->result = impl->eventsPlayed();


}

::CORBA::Boolean STI::Server_Device::_objref_DeviceControl::eventsPlayed()
{
  _0RL_cd_b03af55d077a10b8_d1000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_72000000, "_get_eventsPlayed", 18);


  _invoke(_call_desc);
  return _call_desc.result;


}
STI::Server_Device::_pof_DeviceControl::~_pof_DeviceControl() {}


omniObjRef*
STI::Server_Device::_pof_DeviceControl::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::STI::Server_Device::_objref_DeviceControl(ior, id);
}


::CORBA::Boolean
STI::Server_Device::_pof_DeviceControl::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::STI::Server_Device::DeviceControl::_PD_repoId) )
    return 1;
  
  return 0;
}

const STI::Server_Device::_pof_DeviceControl _the_pof_STI_mServer__Device_mDeviceControl;

STI::Server_Device::_impl_DeviceControl::~_impl_DeviceControl() {}


::CORBA::Boolean
STI::Server_Device::_impl_DeviceControl::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "status") ) {

    _0RL_cd_b03af55d077a10b8_71000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_81000000, "status", 7, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "transferEvents") ) {

    _0RL_cd_b03af55d077a10b8_91000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_a1000000, "transferEvents", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "reset") ) {

    _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_b1000000, "reset", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "load") ) {

    _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_c1000000, "load", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "prepareToPlay") ) {

    _0RL_cd_b03af55d077a10b8_d1000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_e1000000, "prepareToPlay", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "play") ) {

    _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_f1000000, "play", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "pause") ) {

    _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_02000000, "pause", 6, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "stop") ) {

    _0RL_cd_b03af55d077a10b8_20000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_12000000, "stop", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "ping") ) {

    _0RL_cd_b03af55d077a10b8_d1000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_22000000, "ping", 5, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_controlMsg") ) {

    _0RL_cd_b03af55d077a10b8_c0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_32000000, "_get_controlMsg", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_transferErr") ) {

    _0RL_cd_b03af55d077a10b8_c0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_42000000, "_get_transferErr", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_eventsParsed") ) {

    _0RL_cd_b03af55d077a10b8_d1000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_52000000, "_get_eventsParsed", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_eventsLoaded") ) {

    _0RL_cd_b03af55d077a10b8_d1000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_62000000, "_get_eventsLoaded", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_eventsPlayed") ) {

    _0RL_cd_b03af55d077a10b8_d1000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_72000000, "_get_eventsPlayed", 18, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
STI::Server_Device::_impl_DeviceControl::_ptrToInterface(const char* id)
{
  if( id == ::STI::Server_Device::DeviceControl::_PD_repoId )
    return (::STI::Server_Device::_impl_DeviceControl*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::STI::Server_Device::DeviceControl::_PD_repoId) )
    return (::STI::Server_Device::_impl_DeviceControl*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
STI::Server_Device::_impl_DeviceControl::_mostDerivedRepoId()
{
  return ::STI::Server_Device::DeviceControl::_PD_repoId;
}

STI::Server_Device::ServerConfigure_ptr STI::Server_Device::ServerConfigure_Helper::_nil() {
  return ::STI::Server_Device::ServerConfigure::_nil();
}

::CORBA::Boolean STI::Server_Device::ServerConfigure_Helper::is_nil(::STI::Server_Device::ServerConfigure_ptr p) {
  return ::CORBA::is_nil(p);

}

void STI::Server_Device::ServerConfigure_Helper::release(::STI::Server_Device::ServerConfigure_ptr p) {
  ::CORBA::release(p);
}

void STI::Server_Device::ServerConfigure_Helper::marshalObjRef(::STI::Server_Device::ServerConfigure_ptr obj, cdrStream& s) {
  ::STI::Server_Device::ServerConfigure::_marshalObjRef(obj, s);
}

STI::Server_Device::ServerConfigure_ptr STI::Server_Device::ServerConfigure_Helper::unmarshalObjRef(cdrStream& s) {
  return ::STI::Server_Device::ServerConfigure::_unmarshalObjRef(s);
}

void STI::Server_Device::ServerConfigure_Helper::duplicate(::STI::Server_Device::ServerConfigure_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

STI::Server_Device::ServerConfigure_ptr
STI::Server_Device::ServerConfigure::_duplicate(::STI::Server_Device::ServerConfigure_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

STI::Server_Device::ServerConfigure_ptr
STI::Server_Device::ServerConfigure::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


STI::Server_Device::ServerConfigure_ptr
STI::Server_Device::ServerConfigure::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

STI::Server_Device::ServerConfigure_ptr
STI::Server_Device::ServerConfigure::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_ServerConfigure _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_ServerConfigure* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_ServerConfigure;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* STI::Server_Device::ServerConfigure::_PD_repoId = "IDL:STI/Server_Device/ServerConfigure:1.0";


STI::Server_Device::_objref_ServerConfigure::~_objref_ServerConfigure() {
  
}


STI::Server_Device::_objref_ServerConfigure::_objref_ServerConfigure(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::STI::Server_Device::ServerConfigure::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
STI::Server_Device::_objref_ServerConfigure::_ptrToObjRef(const char* id)
{
  if( id == ::STI::Server_Device::ServerConfigure::_PD_repoId )
    return (::STI::Server_Device::ServerConfigure_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::STI::Server_Device::ServerConfigure::_PD_repoId) )
    return (::STI::Server_Device::ServerConfigure_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Proxy call descriptor class. Mangled signature:
//  _cboolean_n_cSTI_mTypes_mTDevice
class _0RL_cd_b03af55d077a10b8_82000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_82000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  STI::Types::TDevice_var arg_0_;
  STI::Types::TDevice* arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_b03af55d077a10b8_82000000::marshalArguments(cdrStream& _n)
{
  (const STI::Types::TDevice&) *arg_0 >>= _n;

}

void _0RL_cd_b03af55d077a10b8_82000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new STI::Types::TDevice;
  (STI::Types::TDevice&)arg_0_ <<= _n;
  arg_0 = &arg_0_.inout();

}

void _0RL_cd_b03af55d077a10b8_82000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  (const STI::Types::TDevice&) *arg_0 >>= _n;

}

void _0RL_cd_b03af55d077a10b8_82000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  (STI::Types::TDevice&)*arg_0 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_92000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_82000000* tcd = (_0RL_cd_b03af55d077a10b8_82000000*)cd;
  STI::Server_Device::_impl_ServerConfigure* impl = (STI::Server_Device::_impl_ServerConfigure*) svnt->_ptrToInterface(STI::Server_Device::ServerConfigure::_PD_repoId);
  tcd->result = impl->registerDevice(*tcd->arg_0);


}

::CORBA::Boolean STI::Server_Device::_objref_ServerConfigure::registerDevice(Types::TDevice& device)
{
  _0RL_cd_b03af55d077a10b8_82000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_92000000, "registerDevice", 15);
  _call_desc.arg_0 = &(Types::TDevice&) device;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cstring_i_cSTI_mTypes_mTDeviceChannelSeq
class _0RL_cd_b03af55d077a10b8_a2000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_a2000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::String_var arg_0_;
  const char* arg_0;
  STI::Types::TDeviceChannelSeq_var arg_1_;
  const STI::Types::TDeviceChannelSeq* arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_b03af55d077a10b8_a2000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  (const STI::Types::TDeviceChannelSeq&) *arg_1 >>= _n;

}

void _0RL_cd_b03af55d077a10b8_a2000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  arg_1_ = new STI::Types::TDeviceChannelSeq;
  (STI::Types::TDeviceChannelSeq&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();

}

void _0RL_cd_b03af55d077a10b8_a2000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_b03af55d077a10b8_a2000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_b2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_a2000000* tcd = (_0RL_cd_b03af55d077a10b8_a2000000*)cd;
  STI::Server_Device::_impl_ServerConfigure* impl = (STI::Server_Device::_impl_ServerConfigure*) svnt->_ptrToInterface(STI::Server_Device::ServerConfigure::_PD_repoId);
  tcd->result = impl->setChannels(tcd->arg_0, *tcd->arg_1);


}

::CORBA::Boolean STI::Server_Device::_objref_ServerConfigure::setChannels(const char* deviceID, const Types::TDeviceChannelSeq& channels)
{
  _0RL_cd_b03af55d077a10b8_a2000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_b2000000, "setChannels", 12);
  _call_desc.arg_0 = deviceID;
  _call_desc.arg_1 = &(Types::TDeviceChannelSeq&) channels;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cstring
class _0RL_cd_b03af55d077a10b8_c2000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_c2000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::String_var arg_0_;
  const char* arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_b03af55d077a10b8_c2000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_b03af55d077a10b8_c2000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_b03af55d077a10b8_c2000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_b03af55d077a10b8_c2000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_d2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_c2000000* tcd = (_0RL_cd_b03af55d077a10b8_c2000000*)cd;
  STI::Server_Device::_impl_ServerConfigure* impl = (STI::Server_Device::_impl_ServerConfigure*) svnt->_ptrToInterface(STI::Server_Device::ServerConfigure::_PD_repoId);
  tcd->result = impl->activateDevice(tcd->arg_0);


}

::CORBA::Boolean STI::Server_Device::_objref_ServerConfigure::activateDevice(const char* deviceID)
{
  _0RL_cd_b03af55d077a10b8_c2000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_d2000000, "activateDevice", 15);
  _call_desc.arg_0 = deviceID;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_e2000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_c2000000* tcd = (_0RL_cd_b03af55d077a10b8_c2000000*)cd;
  STI::Server_Device::_impl_ServerConfigure* impl = (STI::Server_Device::_impl_ServerConfigure*) svnt->_ptrToInterface(STI::Server_Device::ServerConfigure::_PD_repoId);
  tcd->result = impl->removeDevice(tcd->arg_0);


}

::CORBA::Boolean STI::Server_Device::_objref_ServerConfigure::removeDevice(const char* deviceID)
{
  _0RL_cd_b03af55d077a10b8_c2000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_e2000000, "removeDevice", 13);
  _call_desc.arg_0 = deviceID;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cstring_i_cSTI_mTypes_mTDevice
class _0RL_cd_b03af55d077a10b8_f2000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_f2000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  STI::Types::TDevice_var arg_0_;
  const STI::Types::TDevice* arg_0;
  ::CORBA::String_var result;
};

void _0RL_cd_b03af55d077a10b8_f2000000::marshalArguments(cdrStream& _n)
{
  (const STI::Types::TDevice&) *arg_0 >>= _n;

}

void _0RL_cd_b03af55d077a10b8_f2000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new STI::Types::TDevice;
  (STI::Types::TDevice&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();

}

void _0RL_cd_b03af55d077a10b8_f2000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalString(result,0);

}

void _0RL_cd_b03af55d077a10b8_f2000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalString(0);

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_03000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_f2000000* tcd = (_0RL_cd_b03af55d077a10b8_f2000000*)cd;
  STI::Server_Device::_impl_ServerConfigure* impl = (STI::Server_Device::_impl_ServerConfigure*) svnt->_ptrToInterface(STI::Server_Device::ServerConfigure::_PD_repoId);
  tcd->result = impl->generateDeviceID(*tcd->arg_0);


}

char* STI::Server_Device::_objref_ServerConfigure::generateDeviceID(const Types::TDevice& device)
{
  _0RL_cd_b03af55d077a10b8_f2000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_03000000, "generateDeviceID", 17);
  _call_desc.arg_0 = &(Types::TDevice&) device;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  void_i_cstring_i_cSTI_mTypes_mTMessageType_i_cstring
class _0RL_cd_b03af55d077a10b8_13000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_13000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  ::CORBA::String_var arg_0_;
  const char* arg_0;
  STI::Types::TMessageType arg_1;
  ::CORBA::String_var arg_2_;
  const char* arg_2;
};

void _0RL_cd_b03af55d077a10b8_13000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);
  arg_1 >>= _n;
  _n.marshalString(arg_2,0);

}

void _0RL_cd_b03af55d077a10b8_13000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();
  (STI::Types::TMessageType&)arg_1 <<= _n;
  arg_2_ = _n.unmarshalString(0);
  arg_2 = arg_2_.in();

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_23000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_13000000* tcd = (_0RL_cd_b03af55d077a10b8_13000000*)cd;
  STI::Server_Device::_impl_ServerConfigure* impl = (STI::Server_Device::_impl_ServerConfigure*) svnt->_ptrToInterface(STI::Server_Device::ServerConfigure::_PD_repoId);
  impl->reportMessage(tcd->arg_0, tcd->arg_1, tcd->arg_2);


}

void STI::Server_Device::_objref_ServerConfigure::reportMessage(const char* deviceID, Types::TMessageType type, const char* message)
{
  _0RL_cd_b03af55d077a10b8_13000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_23000000, "reportMessage", 14);
  _call_desc.arg_0 = deviceID;
  _call_desc.arg_1 = type;
  _call_desc.arg_2 = message;

  _invoke(_call_desc);



}
// Proxy call descriptor class. Mangled signature:
//  void_i_cstring
class _0RL_cd_b03af55d077a10b8_33000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_33000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

    
  
  ::CORBA::String_var arg_0_;
  const char* arg_0;
};

void _0RL_cd_b03af55d077a10b8_33000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_b03af55d077a10b8_33000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_43000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_33000000* tcd = (_0RL_cd_b03af55d077a10b8_33000000*)cd;
  STI::Server_Device::_impl_ServerConfigure* impl = (STI::Server_Device::_impl_ServerConfigure*) svnt->_ptrToInterface(STI::Server_Device::ServerConfigure::_PD_repoId);
  impl->pauseServer(tcd->arg_0);


}

void STI::Server_Device::_objref_ServerConfigure::pauseServer(const char* deviceID)
{
  _0RL_cd_b03af55d077a10b8_33000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_43000000, "pauseServer", 12);
  _call_desc.arg_0 = deviceID;

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_53000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_33000000* tcd = (_0RL_cd_b03af55d077a10b8_33000000*)cd;
  STI::Server_Device::_impl_ServerConfigure* impl = (STI::Server_Device::_impl_ServerConfigure*) svnt->_ptrToInterface(STI::Server_Device::ServerConfigure::_PD_repoId);
  impl->unpauseServer(tcd->arg_0);


}

void STI::Server_Device::_objref_ServerConfigure::unpauseServer(const char* deviceID)
{
  _0RL_cd_b03af55d077a10b8_33000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_53000000, "unpauseServer", 14);
  _call_desc.arg_0 = deviceID;

  _invoke(_call_desc);



}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_63000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_a0000000* tcd = (_0RL_cd_b03af55d077a10b8_a0000000*)cd;
  STI::Server_Device::_impl_ServerConfigure* impl = (STI::Server_Device::_impl_ServerConfigure*) svnt->_ptrToInterface(STI::Server_Device::ServerConfigure::_PD_repoId);
  tcd->result = impl->attributes();


}

STI::Types::TAttributeSeq* STI::Server_Device::_objref_ServerConfigure::attributes()
{
  _0RL_cd_b03af55d077a10b8_a0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_63000000, "_get_attributes", 16);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_73000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_c0000000* tcd = (_0RL_cd_b03af55d077a10b8_c0000000*)cd;
  STI::Server_Device::_impl_ServerConfigure* impl = (STI::Server_Device::_impl_ServerConfigure*) svnt->_ptrToInterface(STI::Server_Device::ServerConfigure::_PD_repoId);
  tcd->result = impl->serverName();


}

char* STI::Server_Device::_objref_ServerConfigure::serverName()
{
  _0RL_cd_b03af55d077a10b8_c0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_73000000, "_get_serverName", 16);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
STI::Server_Device::_pof_ServerConfigure::~_pof_ServerConfigure() {}


omniObjRef*
STI::Server_Device::_pof_ServerConfigure::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::STI::Server_Device::_objref_ServerConfigure(ior, id);
}


::CORBA::Boolean
STI::Server_Device::_pof_ServerConfigure::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::STI::Server_Device::ServerConfigure::_PD_repoId) )
    return 1;
  
  return 0;
}

const STI::Server_Device::_pof_ServerConfigure _the_pof_STI_mServer__Device_mServerConfigure;

STI::Server_Device::_impl_ServerConfigure::~_impl_ServerConfigure() {}


::CORBA::Boolean
STI::Server_Device::_impl_ServerConfigure::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "registerDevice") ) {

    _0RL_cd_b03af55d077a10b8_82000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_92000000, "registerDevice", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setChannels") ) {

    _0RL_cd_b03af55d077a10b8_a2000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_b2000000, "setChannels", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "activateDevice") ) {

    _0RL_cd_b03af55d077a10b8_c2000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_d2000000, "activateDevice", 15, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "removeDevice") ) {

    _0RL_cd_b03af55d077a10b8_c2000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_e2000000, "removeDevice", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "generateDeviceID") ) {

    _0RL_cd_b03af55d077a10b8_f2000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_03000000, "generateDeviceID", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "reportMessage") ) {

    _0RL_cd_b03af55d077a10b8_13000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_23000000, "reportMessage", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "pauseServer") ) {

    _0RL_cd_b03af55d077a10b8_33000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_43000000, "pauseServer", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "unpauseServer") ) {

    _0RL_cd_b03af55d077a10b8_33000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_53000000, "unpauseServer", 14, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_attributes") ) {

    _0RL_cd_b03af55d077a10b8_a0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_63000000, "_get_attributes", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_serverName") ) {

    _0RL_cd_b03af55d077a10b8_c0000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_73000000, "_get_serverName", 16, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
STI::Server_Device::_impl_ServerConfigure::_ptrToInterface(const char* id)
{
  if( id == ::STI::Server_Device::ServerConfigure::_PD_repoId )
    return (::STI::Server_Device::_impl_ServerConfigure*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::STI::Server_Device::ServerConfigure::_PD_repoId) )
    return (::STI::Server_Device::_impl_ServerConfigure*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
STI::Server_Device::_impl_ServerConfigure::_mostDerivedRepoId()
{
  return ::STI::Server_Device::ServerConfigure::_PD_repoId;
}

STI::Server_Device::CommandLine_ptr STI::Server_Device::CommandLine_Helper::_nil() {
  return ::STI::Server_Device::CommandLine::_nil();
}

::CORBA::Boolean STI::Server_Device::CommandLine_Helper::is_nil(::STI::Server_Device::CommandLine_ptr p) {
  return ::CORBA::is_nil(p);

}

void STI::Server_Device::CommandLine_Helper::release(::STI::Server_Device::CommandLine_ptr p) {
  ::CORBA::release(p);
}

void STI::Server_Device::CommandLine_Helper::marshalObjRef(::STI::Server_Device::CommandLine_ptr obj, cdrStream& s) {
  ::STI::Server_Device::CommandLine::_marshalObjRef(obj, s);
}

STI::Server_Device::CommandLine_ptr STI::Server_Device::CommandLine_Helper::unmarshalObjRef(cdrStream& s) {
  return ::STI::Server_Device::CommandLine::_unmarshalObjRef(s);
}

void STI::Server_Device::CommandLine_Helper::duplicate(::STI::Server_Device::CommandLine_ptr obj) {
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
}

STI::Server_Device::CommandLine_ptr
STI::Server_Device::CommandLine::_duplicate(::STI::Server_Device::CommandLine_ptr obj)
{
  if( obj && !obj->_NP_is_nil() )  omni::duplicateObjRef(obj);
  return obj;
}

STI::Server_Device::CommandLine_ptr
STI::Server_Device::CommandLine::_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_realNarrow(_PD_repoId);
  return e ? e : _nil();
}


STI::Server_Device::CommandLine_ptr
STI::Server_Device::CommandLine::_unchecked_narrow(::CORBA::Object_ptr obj)
{
  if( !obj || obj->_NP_is_nil() || obj->_NP_is_pseudo() ) return _nil();
  _ptr_type e = (_ptr_type) obj->_PR_getobj()->_uncheckedNarrow(_PD_repoId);
  return e ? e : _nil();
}

STI::Server_Device::CommandLine_ptr
STI::Server_Device::CommandLine::_nil()
{
#ifdef OMNI_UNLOADABLE_STUBS
  static _objref_CommandLine _the_nil_obj;
  return &_the_nil_obj;
#else
  static _objref_CommandLine* _the_nil_ptr = 0;
  if( !_the_nil_ptr ) {
    omni::nilRefLock().lock();
    if( !_the_nil_ptr ) {
      _the_nil_ptr = new _objref_CommandLine;
      registerNilCorbaObject(_the_nil_ptr);
    }
    omni::nilRefLock().unlock();
  }
  return _the_nil_ptr;
#endif
}

const char* STI::Server_Device::CommandLine::_PD_repoId = "IDL:STI/Server_Device/CommandLine:1.0";


STI::Server_Device::_objref_CommandLine::~_objref_CommandLine() {
  
}


STI::Server_Device::_objref_CommandLine::_objref_CommandLine(omniIOR* ior, omniIdentity* id) :
   omniObjRef(::STI::Server_Device::CommandLine::_PD_repoId, ior, id, 1)
   
   
{
  _PR_setobj(this);
}

void*
STI::Server_Device::_objref_CommandLine::_ptrToObjRef(const char* id)
{
  if( id == ::STI::Server_Device::CommandLine::_PD_repoId )
    return (::STI::Server_Device::CommandLine_ptr) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (::CORBA::Object_ptr) this;

  if( omni::strMatch(id, ::STI::Server_Device::CommandLine::_PD_repoId) )
    return (::STI::Server_Device::CommandLine_ptr) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (::CORBA::Object_ptr) this;

  return 0;
}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_83000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_60000000* tcd = (_0RL_cd_b03af55d077a10b8_60000000*)cd;
  STI::Server_Device::_impl_CommandLine* impl = (STI::Server_Device::_impl_CommandLine*) svnt->_ptrToInterface(STI::Server_Device::CommandLine::_PD_repoId);
  tcd->result = impl->execute(tcd->arg_0);


}

char* STI::Server_Device::_objref_CommandLine::execute(const char* args)
{
  _0RL_cd_b03af55d077a10b8_60000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_83000000, "execute", 8);
  _call_desc.arg_0 = args;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_93000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_40000000* tcd = (_0RL_cd_b03af55d077a10b8_40000000*)cd;
  STI::Server_Device::_impl_CommandLine* impl = (STI::Server_Device::_impl_CommandLine*) svnt->_ptrToInterface(STI::Server_Device::CommandLine::_PD_repoId);
  tcd->result = impl->setAttribute(tcd->arg_0, tcd->arg_1);


}

::CORBA::Boolean STI::Server_Device::_objref_CommandLine::setAttribute(const char* key, const char* value)
{
  _0RL_cd_b03af55d077a10b8_40000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_93000000, "setAttribute", 13);
  _call_desc.arg_0 = key;
  _call_desc.arg_1 = value;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_a3000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_60000000* tcd = (_0RL_cd_b03af55d077a10b8_60000000*)cd;
  STI::Server_Device::_impl_CommandLine* impl = (STI::Server_Device::_impl_CommandLine*) svnt->_ptrToInterface(STI::Server_Device::CommandLine::_PD_repoId);
  tcd->result = impl->getAttribute(tcd->arg_0);


}

char* STI::Server_Device::_objref_CommandLine::getAttribute(const char* key)
{
  _0RL_cd_b03af55d077a10b8_60000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_a3000000, "getAttribute", 13);
  _call_desc.arg_0 = key;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cunsigned_pshort_i_cSTI_mTypes_mTValMixed
class _0RL_cd_b03af55d077a10b8_b3000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_b3000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::UShort arg_0;
  STI::Types::TValMixed_var arg_1_;
  const STI::Types::TValMixed* arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_b03af55d077a10b8_b3000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  (const STI::Types::TValMixed&) *arg_1 >>= _n;

}

void _0RL_cd_b03af55d077a10b8_b3000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::UShort&)arg_0 <<= _n;
  arg_1_ = new STI::Types::TValMixed;
  (STI::Types::TValMixed&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();

}

void _0RL_cd_b03af55d077a10b8_b3000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_b03af55d077a10b8_b3000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_c3000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_b3000000* tcd = (_0RL_cd_b03af55d077a10b8_b3000000*)cd;
  STI::Server_Device::_impl_CommandLine* impl = (STI::Server_Device::_impl_CommandLine*) svnt->_ptrToInterface(STI::Server_Device::CommandLine::_PD_repoId);
  tcd->result = impl->writeChannel(tcd->arg_0, *tcd->arg_1);


}

::CORBA::Boolean STI::Server_Device::_objref_CommandLine::writeChannel(::CORBA::UShort channel, const Types::TValMixed& value)
{
  _0RL_cd_b03af55d077a10b8_b3000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_c3000000, "writeChannel", 13);
  _call_desc.arg_0 = channel;
  _call_desc.arg_1 = &(Types::TValMixed&) value;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cunsigned_pshort_i_cSTI_mTypes_mTValMixed_o_cSTI_mTypes_mTDataMixed
class _0RL_cd_b03af55d077a10b8_d3000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_d3000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::UShort arg_0;
  STI::Types::TValMixed_var arg_1_;
  const STI::Types::TValMixed* arg_1;
  STI::Types::TDataMixed_var arg_2;
  ::CORBA::Boolean result;
};

void _0RL_cd_b03af55d077a10b8_d3000000::marshalArguments(cdrStream& _n)
{
  arg_0 >>= _n;
  (const STI::Types::TValMixed&) *arg_1 >>= _n;

}

void _0RL_cd_b03af55d077a10b8_d3000000::unmarshalArguments(cdrStream& _n)
{
  (::CORBA::UShort&)arg_0 <<= _n;
  arg_1_ = new STI::Types::TValMixed;
  (STI::Types::TValMixed&)arg_1_ <<= _n;
  arg_1 = &arg_1_.in();

}

void _0RL_cd_b03af55d077a10b8_d3000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  (const STI::Types::TDataMixed&) arg_2 >>= _n;

}

void _0RL_cd_b03af55d077a10b8_d3000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  arg_2 = new STI::Types::TDataMixed;
  (STI::Types::TDataMixed&)arg_2 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_e3000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_d3000000* tcd = (_0RL_cd_b03af55d077a10b8_d3000000*)cd;
  STI::Server_Device::_impl_CommandLine* impl = (STI::Server_Device::_impl_CommandLine*) svnt->_ptrToInterface(STI::Server_Device::CommandLine::_PD_repoId);
  tcd->result = impl->readChannel(tcd->arg_0, *tcd->arg_1, tcd->arg_2.out());


}

::CORBA::Boolean STI::Server_Device::_objref_CommandLine::readChannel(::CORBA::UShort channel, const Types::TValMixed& value, Types::TDataMixed_out data)
{
  _0RL_cd_b03af55d077a10b8_d3000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_e3000000, "readChannel", 12);
  _call_desc.arg_0 = channel;
  _call_desc.arg_1 = &(Types::TValMixed&) value;

  _invoke(_call_desc);
  data = _call_desc.arg_2._retn();
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cSTI_mTypes_mTDeviceEventSeq_n_cSTI_mServer__Device_mDeviceControlSeq
class _0RL_cd_b03af55d077a10b8_f3000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_f3000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  STI::Types::TDeviceEventSeq_var arg_0_;
  const STI::Types::TDeviceEventSeq* arg_0;
  STI::Server_Device::DeviceControlSeq_var arg_1_;
  STI::Server_Device::DeviceControlSeq* arg_1;
  ::CORBA::Boolean result;
};

void _0RL_cd_b03af55d077a10b8_f3000000::marshalArguments(cdrStream& _n)
{
  (const STI::Types::TDeviceEventSeq&) *arg_0 >>= _n;
  (const STI::Server_Device::DeviceControlSeq&) *arg_1 >>= _n;

}

void _0RL_cd_b03af55d077a10b8_f3000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = new STI::Types::TDeviceEventSeq;
  (STI::Types::TDeviceEventSeq&)arg_0_ <<= _n;
  arg_0 = &arg_0_.in();
  arg_1_ = new STI::Server_Device::DeviceControlSeq;
  (STI::Server_Device::DeviceControlSeq&)arg_1_ <<= _n;
  arg_1 = &arg_1_.inout();

}

void _0RL_cd_b03af55d077a10b8_f3000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);
  (const STI::Server_Device::DeviceControlSeq&) *arg_1 >>= _n;

}

void _0RL_cd_b03af55d077a10b8_f3000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();
  (STI::Server_Device::DeviceControlSeq&)*arg_1 <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_04000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_f3000000* tcd = (_0RL_cd_b03af55d077a10b8_f3000000*)cd;
  STI::Server_Device::_impl_CommandLine* impl = (STI::Server_Device::_impl_CommandLine*) svnt->_ptrToInterface(STI::Server_Device::CommandLine::_PD_repoId);
  tcd->result = impl->preparePartnerEvents(*tcd->arg_0, *tcd->arg_1);


}

::CORBA::Boolean STI::Server_Device::_objref_CommandLine::preparePartnerEvents(const Types::TDeviceEventSeq& eventsIn, DeviceControlSeq& partnerControls)
{
  _0RL_cd_b03af55d077a10b8_f3000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_04000000, "preparePartnerEvents", 21);
  _call_desc.arg_0 = &(Types::TDeviceEventSeq&) eventsIn;
  _call_desc.arg_1 = &(DeviceControlSeq&) partnerControls;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cboolean_i_cSTI_mServer__Device_mCommandLine
class _0RL_cd_b03af55d077a10b8_14000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_14000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  STI::Server_Device::CommandLine_var arg_0_;
  STI::Server_Device::CommandLine_ptr arg_0;
  ::CORBA::Boolean result;
};

void _0RL_cd_b03af55d077a10b8_14000000::marshalArguments(cdrStream& _n)
{
  STI::Server_Device::CommandLine::_marshalObjRef(arg_0,_n);

}

void _0RL_cd_b03af55d077a10b8_14000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = STI::Server_Device::CommandLine::_unmarshalObjRef(_n);
  arg_0 = arg_0_.in();

}

void _0RL_cd_b03af55d077a10b8_14000000::marshalReturnedValues(cdrStream& _n)
{
  _n.marshalBoolean(result);

}

void _0RL_cd_b03af55d077a10b8_14000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = _n.unmarshalBoolean();

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_24000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_14000000* tcd = (_0RL_cd_b03af55d077a10b8_14000000*)cd;
  STI::Server_Device::_impl_CommandLine* impl = (STI::Server_Device::_impl_CommandLine*) svnt->_ptrToInterface(STI::Server_Device::CommandLine::_PD_repoId);
  tcd->result = impl->registerPartnerDevice(tcd->arg_0);


}

::CORBA::Boolean STI::Server_Device::_objref_CommandLine::registerPartnerDevice(CommandLine_ptr partnerCmdLine)
{
  _0RL_cd_b03af55d077a10b8_14000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_24000000, "registerPartnerDevice", 22);
  _call_desc.arg_0 = partnerCmdLine;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_34000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_c2000000* tcd = (_0RL_cd_b03af55d077a10b8_c2000000*)cd;
  STI::Server_Device::_impl_CommandLine* impl = (STI::Server_Device::_impl_CommandLine*) svnt->_ptrToInterface(STI::Server_Device::CommandLine::_PD_repoId);
  tcd->result = impl->unregisterPartnerDevice(tcd->arg_0);


}

::CORBA::Boolean STI::Server_Device::_objref_CommandLine::unregisterPartnerDevice(const char* deviceID)
{
  _0RL_cd_b03af55d077a10b8_c2000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_34000000, "unregisterPartnerDevice", 24);
  _call_desc.arg_0 = deviceID;

  _invoke(_call_desc);
  return _call_desc.result;


}
// Proxy call descriptor class. Mangled signature:
//  _cSTI_mTypes_mTDeviceEventSeq_i_cstring
class _0RL_cd_b03af55d077a10b8_44000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_44000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  void marshalArguments(cdrStream&);
  void unmarshalArguments(cdrStream&);

  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  ::CORBA::String_var arg_0_;
  const char* arg_0;
  STI::Types::TDeviceEventSeq_var result;
};

void _0RL_cd_b03af55d077a10b8_44000000::marshalArguments(cdrStream& _n)
{
  _n.marshalString(arg_0,0);

}

void _0RL_cd_b03af55d077a10b8_44000000::unmarshalArguments(cdrStream& _n)
{
  arg_0_ = _n.unmarshalString(0);
  arg_0 = arg_0_.in();

}

void _0RL_cd_b03af55d077a10b8_44000000::marshalReturnedValues(cdrStream& _n)
{
  (const STI::Types::TDeviceEventSeq&) result >>= _n;

}

void _0RL_cd_b03af55d077a10b8_44000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new STI::Types::TDeviceEventSeq;
  (STI::Types::TDeviceEventSeq&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_54000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_44000000* tcd = (_0RL_cd_b03af55d077a10b8_44000000*)cd;
  STI::Server_Device::_impl_CommandLine* impl = (STI::Server_Device::_impl_CommandLine*) svnt->_ptrToInterface(STI::Server_Device::CommandLine::_PD_repoId);
  tcd->result = impl->getPartnerEvents(tcd->arg_0);


}

STI::Types::TDeviceEventSeq* STI::Server_Device::_objref_CommandLine::getPartnerEvents(const char* deviceID)
{
  _0RL_cd_b03af55d077a10b8_44000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_54000000, "getPartnerEvents", 17);
  _call_desc.arg_0 = deviceID;

  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cSTI_mTypes_mTStringSeq
class _0RL_cd_b03af55d077a10b8_64000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_64000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  STI::Types::TStringSeq_var result;
};

void _0RL_cd_b03af55d077a10b8_64000000::marshalReturnedValues(cdrStream& _n)
{
  (const STI::Types::TStringSeq&) result >>= _n;

}

void _0RL_cd_b03af55d077a10b8_64000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new STI::Types::TStringSeq;
  (STI::Types::TStringSeq&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_74000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_64000000* tcd = (_0RL_cd_b03af55d077a10b8_64000000*)cd;
  STI::Server_Device::_impl_CommandLine* impl = (STI::Server_Device::_impl_CommandLine*) svnt->_ptrToInterface(STI::Server_Device::CommandLine::_PD_repoId);
  tcd->result = impl->eventPartnerDevices();


}

STI::Types::TStringSeq* STI::Server_Device::_objref_CommandLine::eventPartnerDevices()
{
  _0RL_cd_b03af55d077a10b8_64000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_74000000, "_get_eventPartnerDevices", 25);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_84000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_64000000* tcd = (_0RL_cd_b03af55d077a10b8_64000000*)cd;
  STI::Server_Device::_impl_CommandLine* impl = (STI::Server_Device::_impl_CommandLine*) svnt->_ptrToInterface(STI::Server_Device::CommandLine::_PD_repoId);
  tcd->result = impl->requiredPartnerDevices();


}

STI::Types::TStringSeq* STI::Server_Device::_objref_CommandLine::requiredPartnerDevices()
{
  _0RL_cd_b03af55d077a10b8_64000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_84000000, "_get_requiredPartnerDevices", 28);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_94000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_64000000* tcd = (_0RL_cd_b03af55d077a10b8_64000000*)cd;
  STI::Server_Device::_impl_CommandLine* impl = (STI::Server_Device::_impl_CommandLine*) svnt->_ptrToInterface(STI::Server_Device::CommandLine::_PD_repoId);
  tcd->result = impl->registeredPartnerDevices();


}

STI::Types::TStringSeq* STI::Server_Device::_objref_CommandLine::registeredPartnerDevices()
{
  _0RL_cd_b03af55d077a10b8_64000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_94000000, "_get_registeredPartnerDevices", 30);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
// Proxy call descriptor class. Mangled signature:
//  _cSTI_mTypes_mTDevice
class _0RL_cd_b03af55d077a10b8_a4000000
  : public omniCallDescriptor
{
public:
  inline _0RL_cd_b03af55d077a10b8_a4000000(LocalCallFn lcfn,const char* op_,size_t oplen,_CORBA_Boolean upcall=0):
     omniCallDescriptor(lcfn, op_, oplen, 0, 0, 0, upcall)
  {
    
  }
  
  
  void unmarshalReturnedValues(cdrStream&);
  void marshalReturnedValues(cdrStream&);
  
  
  STI::Types::TDevice_var result;
};

void _0RL_cd_b03af55d077a10b8_a4000000::marshalReturnedValues(cdrStream& _n)
{
  (const STI::Types::TDevice&) result >>= _n;

}

void _0RL_cd_b03af55d077a10b8_a4000000::unmarshalReturnedValues(cdrStream& _n)
{
  result = new STI::Types::TDevice;
  (STI::Types::TDevice&)result <<= _n;

}

// Local call call-back function.
static void
_0RL_lcfn_b03af55d077a10b8_b4000000(omniCallDescriptor* cd, omniServant* svnt)
{
  _0RL_cd_b03af55d077a10b8_a4000000* tcd = (_0RL_cd_b03af55d077a10b8_a4000000*)cd;
  STI::Server_Device::_impl_CommandLine* impl = (STI::Server_Device::_impl_CommandLine*) svnt->_ptrToInterface(STI::Server_Device::CommandLine::_PD_repoId);
  tcd->result = impl->device();


}

STI::Types::TDevice* STI::Server_Device::_objref_CommandLine::device()
{
  _0RL_cd_b03af55d077a10b8_a4000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_b4000000, "_get_device", 12);


  _invoke(_call_desc);
  return _call_desc.result._retn();


}
STI::Server_Device::_pof_CommandLine::~_pof_CommandLine() {}


omniObjRef*
STI::Server_Device::_pof_CommandLine::newObjRef(omniIOR* ior, omniIdentity* id)
{
  return new ::STI::Server_Device::_objref_CommandLine(ior, id);
}


::CORBA::Boolean
STI::Server_Device::_pof_CommandLine::is_a(const char* id) const
{
  if( omni::ptrStrMatch(id, ::STI::Server_Device::CommandLine::_PD_repoId) )
    return 1;
  
  return 0;
}

const STI::Server_Device::_pof_CommandLine _the_pof_STI_mServer__Device_mCommandLine;

STI::Server_Device::_impl_CommandLine::~_impl_CommandLine() {}


::CORBA::Boolean
STI::Server_Device::_impl_CommandLine::_dispatch(omniCallHandle& _handle)
{
  const char* op = _handle.operation_name();

  if( omni::strMatch(op, "execute") ) {

    _0RL_cd_b03af55d077a10b8_60000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_83000000, "execute", 8, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "setAttribute") ) {

    _0RL_cd_b03af55d077a10b8_40000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_93000000, "setAttribute", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getAttribute") ) {

    _0RL_cd_b03af55d077a10b8_60000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_a3000000, "getAttribute", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "writeChannel") ) {

    _0RL_cd_b03af55d077a10b8_b3000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_c3000000, "writeChannel", 13, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "readChannel") ) {

    _0RL_cd_b03af55d077a10b8_d3000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_e3000000, "readChannel", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "preparePartnerEvents") ) {

    _0RL_cd_b03af55d077a10b8_f3000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_04000000, "preparePartnerEvents", 21, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "registerPartnerDevice") ) {

    _0RL_cd_b03af55d077a10b8_14000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_24000000, "registerPartnerDevice", 22, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "unregisterPartnerDevice") ) {

    _0RL_cd_b03af55d077a10b8_c2000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_34000000, "unregisterPartnerDevice", 24, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "getPartnerEvents") ) {

    _0RL_cd_b03af55d077a10b8_44000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_54000000, "getPartnerEvents", 17, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_eventPartnerDevices") ) {

    _0RL_cd_b03af55d077a10b8_64000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_74000000, "_get_eventPartnerDevices", 25, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_requiredPartnerDevices") ) {

    _0RL_cd_b03af55d077a10b8_64000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_84000000, "_get_requiredPartnerDevices", 28, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_registeredPartnerDevices") ) {

    _0RL_cd_b03af55d077a10b8_64000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_94000000, "_get_registeredPartnerDevices", 30, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }

  if( omni::strMatch(op, "_get_device") ) {

    _0RL_cd_b03af55d077a10b8_a4000000 _call_desc(_0RL_lcfn_b03af55d077a10b8_b4000000, "_get_device", 12, 1);
    
    _handle.upcall(this,_call_desc);
    return 1;
  }


  return 0;
}

void*
STI::Server_Device::_impl_CommandLine::_ptrToInterface(const char* id)
{
  if( id == ::STI::Server_Device::CommandLine::_PD_repoId )
    return (::STI::Server_Device::_impl_CommandLine*) this;
  
  if( id == ::CORBA::Object::_PD_repoId )
    return (void*) 1;

  if( omni::strMatch(id, ::STI::Server_Device::CommandLine::_PD_repoId) )
    return (::STI::Server_Device::_impl_CommandLine*) this;
  
  if( omni::strMatch(id, ::CORBA::Object::_PD_repoId) )
    return (void*) 1;
  return 0;
}

const char*
STI::Server_Device::_impl_CommandLine::_mostDerivedRepoId()
{
  return ::STI::Server_Device::CommandLine::_PD_repoId;
}

POA_STI::Server_Device::DataLogger::~DataLogger() {}

POA_STI::Server_Device::Configure::~Configure() {}

POA_STI::Server_Device::DataTransfer::~DataTransfer() {}

POA_STI::Server_Device::DeviceControl::~DeviceControl() {}

POA_STI::Server_Device::ServerConfigure::~ServerConfigure() {}

POA_STI::Server_Device::CommandLine::~CommandLine() {}

