from stipy import *
 
ns = 1.0
us = 1000.0
ms = 1000000.0
s = 1000000000.0

# Set description used by program
setvar('desc','''Take a picture.''')

setvar('1530 freq',1529.369)
setvar('driftTime',.1)

digitalOut=dev('Digital Out','ep-timing1.stanford.edu',2)
slowAnalogOut=dev('Slow Analog Out', 'ep-timing1.stanford.edu', 4)
fastAnalogOut = dev('Fast Analog Out', 'ep-timing1.stanford.edu', 1)
fastAnalogOut6 = dev('Fast Analog Out', 'ep-timing1.stanford.edu', 6)
trigger = dev('FPGA_Trigger', 'ep-timing1.stanford.edu', 8)
dds = dev('DDS', 'ep-timing1.stanford.edu', 0)
vco0=dev('ADF4360-0', 'ep-timing1.stanford.edu', 0)
vco1=dev('ADF4360-5', 'ep-timing1.stanford.edu', 1)
vco2=dev('ADF4360-5', 'ep-timing1.stanford.edu', 2)
camera=dev('Andor iXon 885','ep-timing1.stanford.edu',0)


#setvar('signal0',     ch(fastAnalogOut, 0)) # The only input channel right now

shutter = ch(digitalOut,1)
motBlowAway = ch(digitalOut,2)
#cameraTrigger=ch(digitalOut,0)
takeImage=ch(camera,0)

TA2 = ch(fastAnalogOut, 0)
TA3 = ch(fastAnalogOut, 1)
quadCoil = ch(fastAnalogOut, 1)
current1530 = ch(fastAnalogOut6,0)
aomSwitch0 = ch(dds, 0)
repumpVCO=dev('ADF4360-0', 'eplittletable.stanford.edu', 0)
coolingVCO=dev('ADF4360-6', 'eplittletable.stanford.edu', 3)
#testDevice = ch(slowAnalogOut, 0)

# Define different blocks of the experiment
def MOT(Start):

    #Initialization Settings
    tStart =1.1*s

    #AOM settings
#    absorptionFreq = 1067 
#    aomFreq0 = absorptionFreq / 8
    aomFreq0 = 110
    aomAmplitude0 = 100
    aomHoldOff = 10*us

    ## TA Settings ##
    voltageTA2 = 1.4
    voltageTA3 = 1.5

    ## Quad Coil Settings ##
    quadCoilVoltage = 3.01

    ## 1530 current settings ##
    voltage1530 = 0.9

    #################### events #######################

    event(ch(trigger, 0), 10*us, "Stop" )
    event(ch(trigger, 0), 30*us, "Play" )

    event(TA2, tStart, voltageTA2)    # TA off MOT dark to kill any residual MOT
    event(TA3, tStart, voltageTA3)    # TA off

    event(aomSwitch0, tStart, (aomFreq0, 0 ,0)) # AOM is off, so no imaging light
  
    return Start


# Global definitions

t0 = 10*us

time = t0
time = MOT(time)